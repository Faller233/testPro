# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import _thread
import time
from concurrent.futures import thread

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QThread, pyqtSignal
from PyQt5.QtGui import QMovie
from win32com.client import Dispatch

import Sound2Text as st
import QA as qa
import FaceDetect as ft

#异步消息录音
class Mythread(QThread):
    # 定义信号,定义参数为str类型
    breakSignal = pyqtSignal(str)
    def __init__(self):
        super(Mythread, self).__init__()
    def __del__(self):
        self.wait()
    def run(self):
        words = st.func()
        self.breakSignal.emit(words)


class Ui_Dialog(object):
    pics = ["smile","question","hello","byebye"]
    speaker = Dispatch('SAPI.SpVoice')
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(800, 600)

        self.myLabel = QtWidgets.QLabel(Dialog)
        self.myLabel.setGeometry(QtCore.QRect(150, 50, 200, 150))
        self.myLabel.setObjectName("myLabel")

        self.myLabel1 = QtWidgets.QLabel(Dialog)
        self.myLabel1.setGeometry(QtCore.QRect(20, 80, 200, 80))
        self.myLabel1.setObjectName("myLabel1")

        self.textEdit = QtWidgets.QTextEdit(Dialog)
        self.textEdit.setGeometry(QtCore.QRect(240, 40, 110, 80))
        self.textEdit.setObjectName("textEdit")

        self.changeBtn = QtWidgets.QPushButton(Dialog)
        self.changeBtn.setGeometry(QtCore.QRect(140, 240, 93, 28))
        self.changeBtn.setObjectName("changeBtn")

        self.changeBtn.clicked.connect(self.dealWords)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)
        # self.faceDetect()

    # def faceDetect(self):
    #     self.thread = MythreadFace()
    #     # 注册信号处理函数
    #     self.thread.breakSignal.connect(self.faceDecCallBack)
    #     self.thread.start()

    # def faceDecCallBack(self,number):
    #     if (number > 0):
    #         self.showMsg("检测到" + str(number) + "个人,您好，请问你需要什么帮助吗")
    #         self.changeMovie("hello")
    #     else:
    #         self.showMsg("没人吗这里？")
    #         self.changeMovie("question")

    #要用self.thread表示当前实例的内容
    def dealWords(self):
        self.thread = Mythread()
        #注册信号处理函数
        self.changeBtn.setEnabled(False)
        self.thread.breakSignal.connect(self.showMsg)
        # self.thread.setDaemon(True)
        self.thread.start()

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.myLabel.setText(_translate("Dialog", "TextLabel"))
        self.myLabel1.setText(_translate("Dialog", "2333"))
        self.changeBtn.setText(_translate("Dialog", "开始录音"))

    #切换虚拟形象图片
    def changeMovie(self,Words):
        if Words in self.pics:
            self.movie = QMovie("pics/" + Words + ".gif")
        else:
            self.movie = QMovie("pics/question.gif")
        self.myLabel.setMovie(self.movie)
        self.movie.start()

    #显示用户说话内容 获得回答之后回显
    def showMsg(self, Msg):
        self.textEdit.clear()
        self.textEdit.setText(Msg)

        answer = qa.Turing(Msg)
        self.myLabel1.setText(answer)

        _thread.start_new_thread(self.speaker.speak,(answer,))

        #允许再次录音
        self.changeBtn.setEnabled(True)

